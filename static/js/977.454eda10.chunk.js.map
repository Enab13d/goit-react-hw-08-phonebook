{"version":3,"file":"static/js/977.454eda10.chunk.js","mappings":"oNAIaA,EAAmBC,EAAAA,EAAAA,KAAH,kRAEbC,EAAAA,EAAAA,OAAa,GAC3BA,EAAAA,EAAAA,GAAAA,GAQWA,EAAAA,EAAAA,OAAa,GACLA,EAAAA,EAAAA,OAAAA,oBAIRC,EAAcF,EAAAA,EAAAA,MAAH,wGACLC,EAAAA,EAAAA,OAAa,GAErBA,EAAAA,EAAAA,OAAAA,cAKEE,EAAcH,EAAAA,EAAAA,MAAH,8RACLC,EAAAA,EAAAA,OAAa,GACnBA,EAAAA,EAAAA,OAAa,GAIRA,EAAAA,EAAAA,OAAa,GACdA,EAAAA,EAAAA,OAAa,GACVA,EAAAA,EAAAA,OAAa,GAGZA,EAAAA,EAAAA,OAAa,IAGrBG,EAAaJ,EAAAA,EAAAA,OAAH,0bAYUC,EAAAA,EAAAA,mBACzBA,EAAAA,EAAAA,yBACIA,EAAAA,EAAAA,mBACJA,EAAAA,EAAAA,yBAIgBA,EAAAA,EAAAA,OAAAA,U,6BCjDXI,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAkB1B,OACE,UAACX,EAAD,CAAkBY,aAAa,MAAMC,SAjBlB,SAAAC,GACnBA,EAAEC,iBACF,MAAkCD,EAAEE,OAAOC,SAAnCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SACfC,EAAc,CAClBH,KAAMA,EAAKI,MACXH,MAAOA,EAAMG,MACbF,SAAUA,EAASE,OAErBf,GAASgB,EAAAA,EAAAA,IAAOF,IACZZ,EACFe,EAAAA,GAAAA,MAAA,sDAA2Df,IAE3DK,EAAEE,OAAOS,OAEZ,EAGC,WACE,SAACtB,EAAD,CAAauB,QAAQ,OAArB,SAA4B,UAC5B,SAACtB,EAAD,CAAauB,KAAK,OAAOT,KAAK,OAAOU,GAAG,UACxC,SAACzB,EAAD,CAAauB,QAAQ,QAArB,SAA6B,WAC7B,SAACtB,EAAD,CAAauB,KAAK,QAAQT,KAAK,QAAQU,GAAG,WAC1C,SAACzB,EAAD,CAAauB,QAAQ,WAArB,SAAgC,cAChC,SAACtB,EAAD,CAAauB,KAAK,WAAWT,KAAK,WAAWU,GAAG,cAChD,SAACvB,EAAD,CAAYsB,KAAK,SAAjB,SAA0B,cAG/B,ECrCD,EAJmB,WACf,OAAO,SAACrB,EAAD,GACV,C","sources":["components/SignupForm/SignupForm.styled.jsx","components/SignupForm/SignupForm.jsx","components/Pages/SignupPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\n\nexport const CustomSignupForm = styled.form`\nmax-width: 100%;\n  margin-top: ${theme.sizing(7)};\n${theme.mq[0]} {\n  width: 380px;\n  margin-left: auto;\n  margin-right: auto;\n}\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  padding: ${theme.sizing(4)};\n background-color: ${theme.colors.transparentWhiteBg};\n  backdrop-filter: blur(8px);\n`;\n\nexport const SignupLabel = styled.label`\n  margin-bottom: ${theme.sizing(2)};\n  font-weight: 500;\n  color: ${theme.colors.abmientWhite};\n  font-size: 18px;\n\n`;\n\nexport const SignupField = styled.input`\n  margin-bottom: ${theme.sizing(2)};\n  padding: ${theme.sizing(3)};\n  font-size: 18px;\n  background-color: hsla(193, 35%, 89%, 1);\n  border-radius: 4px;\n  padding-left: ${theme.sizing(2)};\n  padding-top: ${theme.sizing(1)};\n  padding-bottom: ${theme.sizing(1)};\n  border: none;\n  &: last-of-type {\n    margin-bottom: ${theme.sizing(4)};\n  }\n`;\nexport const SignuptBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  width: 100%;\n  height: 36px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  background-color: hsla(111, 75%, 50%, 1);\n  color: white;\n  transition: background-color ${theme.transitionDuration}\n      ${theme.transitionTimingFunction},\n    color ${theme.transitionDuration}\n      ${theme.transitionTimingFunction};\n  &:hover,\n  &:focus {\n    color: hsla(193, 35%, 89%, 1);\n    background-color: ${theme.colors.darkBlue};\n  }\n  \n`;","import { useDispatch } from 'react-redux';\nimport { signUp } from 'features/auth/operations';\nimport {\n  CustomSignupForm,\n  SignupLabel,\n  SignupField,\n  SignuptBtn,\n} from '../SignupForm/SignupForm.styled';\nimport { useSelector } from 'react-redux';\nimport { selectError } from 'features/auth/selectors';\nimport { toast } from 'react-toastify';\n\nexport const SignupForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password } = e.target.elements;\n    const credentials = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n    dispatch(signUp(credentials));\n    if (error) {\n      toast.error(`Something went wrong, an error has occured. ${error}`);\n    } else {\n      e.target.reset();\n    }\n  };\n\n  return (\n    <CustomSignupForm autoComplete=\"off\" onSubmit={handleSubmit}>\n      <SignupLabel htmlFor=\"name\">Name</SignupLabel>\n      <SignupField type=\"text\" name=\"name\" id=\"name\" />\n      <SignupLabel htmlFor=\"email\">Email</SignupLabel>\n      <SignupField type=\"email\" name=\"email\" id=\"email\" />\n      <SignupLabel htmlFor=\"password\">Password</SignupLabel>\n      <SignupField type=\"password\" name=\"password\" id=\"password\" />\n      <SignuptBtn type=\"submit\">Sign Up</SignuptBtn>\n    </CustomSignupForm>\n  );\n};\n","import { SignupForm } from \"components/SignupForm/SignupForm\";\n\nconst SignupPage = () => {\n    return <SignupForm/>\n}\n\nexport default SignupPage;"],"names":["CustomSignupForm","styled","theme","SignupLabel","SignupField","SignuptBtn","SignupForm","dispatch","useDispatch","error","useSelector","selectError","autoComplete","onSubmit","e","preventDefault","target","elements","name","email","password","credentials","value","signUp","toast","reset","htmlFor","type","id"],"sourceRoot":""}