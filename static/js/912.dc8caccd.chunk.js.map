{"version":3,"file":"static/js/912.dc8caccd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","features/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/EditContactModal/EditContactModal.styled.jsx","components/EditContactModal/EditContactModal.jsx","components/Contact/Contact.jsx","components/App/Loader/Loader.styled.jsx","components/App/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'constants';\nimport { BsPersonAdd } from 'react-icons/bs';\n\nexport const ContactsForm = styled.form`\nwidth: 100%;\n\n\n  display: flex;\n  flex-direction: column;\n\n  border-radius: 8px;\n  padding: ${theme.sizing(1)};\n`;\nexport const Label = styled.label`\n  margin-bottom: ${theme.sizing(2)};\n`;\nexport const Field = styled.input`\n  margin-bottom: ${theme.sizing(2)};\n  height: ${theme.sizing(5)};\n  padding-left: ${theme.sizing(2)};\n  padding-top: ${theme.sizing(1)};\n  padding-bottom: ${theme.sizing(1)};\n  background-color: ${theme.colors.abmientWhite};\n  border-radius: 4px;\n  font-size: 18px;\n  border: none;\n  &: last-of-type {\n    margin-bottom: ${theme.sizing(4)};\n  }\n`;\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  width: 100%;\n  height: 36px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  background-color: ${theme.colors.formBorder};\n  color: white;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${theme.colors.darkBlue};\n  }\n`;\nexport const AddContactIcon = styled(BsPersonAdd)`\nwidth: 24px;\nheight: 24px;\nmargin-left: ${theme.sizing(2)};\n`\nexport const ContactsWrapper = styled.div`\nwidth: calc(100% - 18px);\npadding: ${theme.sizing(5)};\nborder-radius: 8px;\nmargin-top: ${theme.sizing(7)};\n${theme.mq[0]} {\n  width: 380px;\n  margin-left: auto;\n  margin-right: auto;\n};\n  background-color: ${theme.colors.transparentWhiteBg};\n  backdrop-filter: blur(12px);\n\n`","export const selectIsLoading = state => state.contacts.isLoading;\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsDeleting = state => state.contacts.isDeleting;","import { Field, ContactsForm, Label, SubmitBtn } from './ContactForm.styled';\nimport { addContact } from 'features/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectIsLoading, selectIsDeleting } from 'features/contacts/selectors';\nimport { toast } from 'react-toastify';\n\n\nimport { AddContactIcon } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const isDeleting = useSelector(selectIsDeleting);\n\n  const notify = value =>\n    toast.warn(`${value} is already in contacts.`, {\n      position: 'top-center',\n      autoClose: 2000,\n    });\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = e.target.elements;\n    const value = name.value;\n    const isContain = contacts\n      ? contacts.some(\n          contact => contact.name.toLowerCase() === value.toLowerCase()\n        )\n      : null;\n    if (isContain) {\n      return notify(value);\n    };\n    const contact = { name: value, number: number.value };\n    dispatch(addContact(contact));\n    toast.success(`${value} has been added to Your contacts`, {\n      autoClose: 1000,\n    });\n    e.target.reset();\n\n  };\n\n  return (\n    <ContactsForm autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Field\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor=\"number\">Number</Label>\n      <Field\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <SubmitBtn>\n        {isLoading ? !isDeleting && (\n          'Adding...'\n        ) : (\n          <>\n            <span>Add Contact</span>\n            <AddContactIcon title=\"add contact\" />\n          </>\n        )}\n      </SubmitBtn>\n    </ContactsForm>\n  );\n};\n","import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\nexport const FilterLabel = styled.label`\n  display: inline-block;\n  margin-bottom: ${theme.sizing(3)};\n`;\nexport const FilterField = styled.input`\n  width: 100%;\n  height: ${theme.sizing(5)};\n  padding-left: ${theme.sizing(2)};\n  padding-top: ${theme.sizing(1)};\n  padding-bottom: ${theme.sizing(1)};\n  background-color: ${theme.colors.abmientWhite};\n  border-radius: 4px;\n  border: none;\n`;\n","import { FilterField, FilterLabel } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'features/filter/filterSlice';\nimport { getFilterValue } from 'features/filter/filterSlice';\nimport { LuSearch } from 'react-icons/lu';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <FilterLabel htmlFor=\"filter\"><LuSearch/> Find contacts by name</FilterLabel>\n      <FilterField\n        id=\"filter\"\n        onChange={e => dispatch(setFilter(e.target.value))}\n        value={filter}\n      />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding-left: 0;\n  list-style: none;\n  background-color: ${theme.colors.abmientWhite};\n  li:nth-of-type(even) {\n    background-color: ${theme.colors.contactBg};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { theme } from 'constants';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { FiEdit2 } from 'react-icons/fi';\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: ${theme.sizing(2)};\n  padding-right: ${theme.sizing(2)};\n`;\nexport const ContactActionBtn = styled.button`\n  width: 40px;\n  padding: ${theme.sizing(1)};\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  background-color: ${theme.colors.formBorder};\n  color: white;\n  transition: background-color ${theme.transitionDuration}\n      ${theme.transitionTimingFunction},\n    color ${theme.transitionDuration}\n      ${theme.transitionTimingFunction};\n  &:hover,\n  &:focus {\n    color: ${theme.colors.abmientWhite};\n    background-color: ${theme.colors.darkBlue};\n  }\n`;\nexport const ContactBlock = styled.div``;\nexport const ContactName = styled.p`\n  font-weight: 600;\n  line-height: 0.8;\n`;\nexport const ContactNumber = styled.p`\nfont-size: 14px;\nline-height: 0.8;\nfont-weight: 600;\ncolor: ${theme.colors.phoneColor};\n& \n`;\nexport const DeleteIcon = styled(AiOutlineDelete)`\n  width: 20px;\n  height: 20px;\n`;\nexport const EditIcon = styled(FiEdit2)`\n  width: 20px;\n  height: 20px;\n`;\nexport const ButtonHolder = styled.div`\n  display: flex;\n  column-gap: ${theme.sizing(3)};\n`;\n","import styled from \"@emotion/styled\";\nimport { theme } from \"constants\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nexport const Overlay = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: rgba(0, 0, 0, 0.8);\nz-index: 1200;\npointer-events: ${(props) => (props.expanded ? 'auto' : 'none')};\nopacity: ${(props) => (props.expanded ? 1 : 0)};\ntransition: opacity ${theme.transitionDuration} ${theme.transitionTimingFunction};\n\ndiv {\n  transform: scale${(props) => (props.expanded ? '(1)' : '(0.7)')};\n  transition: transform ${theme.transitionDuration} ${theme.transitionTimingFunction};\n}\n\n`\nexport const ModalWindow = styled.div`\nwidth: calc(100vw - 38px);\nmargin-right: auto;\n${theme.mq[0]} {\n  width: 380px;\n  margin-left: auto;\n\n};\nmax-height: calc(100vh - ${theme.sizing(6)});\n`\nexport const EditContactsForm = styled.form`\nwidth: 100%;\n  background-color: hsla(212, 5%, 47%, 1);\n  backdrop-filter: blur(6px);\n\n${theme.mq[0]} {\n  width: 380px;\n  margin-left: auto;\n  margin-right: auto;\n};\n  display: flex;\n  flex-direction: column;\n  border: 1px solid hsla(193, 35%, 89%, 1);\n  border-radius: 8px;\n  padding: ${theme.sizing(4)};\n  \n`;\nexport const EditFormLabel = styled.label`\n  margin-bottom: ${theme.sizing(2)};\n`;\nexport const EditFormField = styled.input`\n  margin-bottom: ${theme.sizing(2)};\n  background-color: hsla(193, 35%, 89%, 1);\n  border-radius: 4px;\n  padding-left: ${theme.sizing(2)};\n  padding-top: ${theme.sizing(2)};\n  padding-bottom: ${theme.sizing(2)};\n  border: none;\n  &: last-of-type {\n    margin-bottom: ${theme.sizing(4)};\n  }\n`;\nexport const EditFormSubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  width: 100%;\n  height: 36px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  background-color: black;\n  color: hsla(193, 35%, 89%, 1);\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${theme.colors.darkBlue};\n  }\n  margin-bottom: ${theme.sizing(2)};\n`;\nexport const CloseIcon = styled(AiOutlineCloseCircle)`\nwidth: 20px;\nheight: 20px;\nmargin-left: 12px;\npointer-events: none;\n`\n","import {  useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { editContact } from 'features/contacts/operations';\nimport { Overlay, ModalWindow, EditContactsForm, EditFormField, EditFormLabel, EditFormSubmitBtn, CloseIcon} from './EditContactModal.styled';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { EditIcon } from 'components/Contact/Contact.styled';\nimport { selectContacts } from 'features/contacts/selectors';\n\n\nexport const EditContactModal = ({ id, name, number, onModalClose, hideModal, expanded }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', onModalClose);\n    return () => {\n      window.removeEventListener('keydown', onModalClose);\n    };\n  }, [onModalClose]);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = e.target.elements;\n    const value = name.value;\n    if (name.value === name.defaultValue && number.value === number.defaultValue) {\n        return;\n    }\n    const contact = { name: value, number: number.value };\n    const isContain = contacts\n      ? contacts.some(\n          contact => contact.name.toLowerCase() === value.toLowerCase() && value.toLowerCase() !== name.defaultValue.toLowerCase()\n        )\n      : null;\n    if (isContain) {\n      return toast.warn(`${value} is already in contacts`);\n    };\n    dispatch(editContact({ id, contact }));\n    toast.success(`Contact has been succesfully updated`, {\n      autoClose: 1000,\n    });\n    e.target.reset();\n    hideModal();\n  };\n  return ReactDOM.createPortal(\n    <Overlay expanded={expanded}>\n      <ModalWindow >\n      <EditContactsForm autoComplete=\"off\" onSubmit={handleSubmit}>\n        <EditFormLabel htmlFor=\"name\"></EditFormLabel>\n        <EditFormField\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          defaultValue={name}\n        />\n        <EditFormLabel htmlFor=\"number\"></EditFormLabel>\n        <EditFormField\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          defaultValue={number}\n        />\n          <EditFormSubmitBtn type=\"submit\">Edit<EditIcon style={{ marginLeft: 12}}/></EditFormSubmitBtn>\n        <EditFormSubmitBtn type=\"button\" onClick={hideModal} id=\"close-modal\">\n          Close<CloseIcon/>\n        </EditFormSubmitBtn>\n      </EditContactsForm>\n      </ModalWindow>\n    </Overlay>,\n    document.querySelector('#modal-root')\n  );\n};\n\nEditContactModal.propTypes = {\n    id: PropTypes.string.isRequired,\n    hideModal: PropTypes.func.isRequired,\n  };\n","import {\n  ContactActionBtn,\n  Item,\n  ContactBlock,\n  ContactName,\n  ContactNumber,\n  EditIcon,\n  ButtonHolder,\n} from './Contact.styled';\nimport { EditContactModal } from 'components/EditContactModal/EditContactModal';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsDeleting } from 'features/contacts/selectors';\nimport { deleteContact } from 'features/contacts/operations';\nimport { DeleteIcon } from './Contact.styled';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useRef } from 'react';\nimport { useState } from 'react';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(selectIsDeleting);\n  const showSpinnerRef = useRef(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => setIsModalOpen(true);\n\n  const hideModal = () => setIsModalOpen(false);\n\n  const onModalClose = e => {\n    if (e.key === 'Escape') {\n      hideModal();\n    }\n  };\n\n  const handleDeleteContact = e => {\n    if (e.currentTarget.id === id) {\n      showSpinnerRef.current = true;\n      dispatch(deleteContact(e.currentTarget.id));\n    }\n  };\n\n  return (\n    <>\n      <Item key={id}>\n        <ContactBlock>\n          <ContactName>{name}</ContactName>\n          <ContactNumber>{number}</ContactNumber>\n        </ContactBlock>\n        <ButtonHolder>\n          <ContactActionBtn type=\"button\" onClick={showModal}>\n            <EditIcon title=\"edit contact\" />\n          </ContactActionBtn>\n          <ContactActionBtn type=\"button\" onClick={handleDeleteContact} id={id}>\n            {isDeleting && showSpinnerRef.current ? (\n              <RotatingLines strokeColor=\"white\" width=\"20\" />\n            ) : (\n              <DeleteIcon title=\"remove contact\" />\n            )}\n          </ContactActionBtn>\n        </ButtonHolder>\n      </Item>\n      <EditContactModal\n          id={id}\n          name={name}\n          number={number}\n          onModalClose={onModalClose}\n          hideModal={hideModal}\n          expanded={isModalOpen}\n        />\n    </>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\nimport { RotatingLines } from \"react-loader-spinner\";\n\nexport const CustomLoader = styled(RotatingLines)`\n`\nexport const LoaderContainer = styled.div`\nmargin-left: 50%;\nmargin-top: 20%;\n`\n","import { CustomLoader, LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => (\n  <>\n    <p>Loading contacts, please wait...</p>\n    <LoaderContainer>\n      <CustomLoader\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"48\"\n      />\n    </LoaderContainer>\n  </>\n);\n","import { List } from './ContactList.styled';\nimport { Contact } from '../Contact';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'features/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'features/contacts/selectors';\nimport { getFilterValue } from 'features/filter/filterSlice';\nimport { Loader } from 'components/App/Loader/Loader';\nimport { useEffect } from 'react';\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(getFilterValue);\n  const contacts = useSelector(selectContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  \n  const filteredContacts = contacts\n    ? [...contacts].filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : [];\n  \n \n  return (\n    <>\n      {isLoading && !contacts.length && (\n        <>\n          <Loader />\n        </>\n      )}\n      <List>\n        {filteredContacts ?\n         filteredContacts.map(({ name, number, id }) => {\n              return (\n                <Contact key={id} id={id} name={name} number={number}></Contact>\n              );\n            }) : null\n          }\n      </List>\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\n\nimport { ContactsWrapper } from 'components/ContactForm/ContactForm.styled';\n\nconst ContactsPage = () => {\n  return (\n\n      <ContactsWrapper>\n      <h1>Phonebook</h1>\n      <ContactForm></ContactForm>\n      <h2>Contacts</h2>\n      <Filter />\n        <ContactList></ContactList>\n\n      </ContactsWrapper>\n\n  );\n};\n\nexport default ContactsPage;"],"names":["ContactsForm","styled","theme","Label","Field","SubmitBtn","AddContactIcon","BsPersonAdd","ContactsWrapper","selectIsLoading","state","contacts","isLoading","selectContacts","items","selectIsDeleting","isDeleting","ContactForm","dispatch","useDispatch","useSelector","autoComplete","onSubmit","e","preventDefault","target","elements","name","number","value","isContain","some","contact","toLowerCase","toast","position","autoClose","notify","addContact","reset","htmlFor","type","id","pattern","title","required","FilterLabel","FilterField","Filter","filter","getFilterValue","onChange","setFilter","List","Item","ContactActionBtn","ContactBlock","ContactName","ContactNumber","DeleteIcon","AiOutlineDelete","EditIcon","FiEdit2","ButtonHolder","Overlay","props","expanded","ModalWindow","EditContactsForm","EditFormLabel","EditFormField","EditFormSubmitBtn","CloseIcon","AiOutlineCloseCircle","EditContactModal","onModalClose","hideModal","useEffect","window","addEventListener","removeEventListener","ReactDOM","defaultValue","editContact","style","marginLeft","onClick","document","querySelector","Contact","showSpinnerRef","useRef","useState","isModalOpen","setIsModalOpen","currentTarget","current","deleteContact","strokeColor","width","key","CustomLoader","RotatingLines","LoaderContainer","Loader","strokeWidth","animationDuration","ContactList","fetchContacts","filteredContacts","includes","length","map"],"sourceRoot":""}