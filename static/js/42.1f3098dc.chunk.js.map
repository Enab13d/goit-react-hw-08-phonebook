{"version":3,"file":"static/js/42.1f3098dc.chunk.js","mappings":"oNAGaA,EAAkBC,EAAAA,EAAAA,KAAH,+RAEZC,EAAAA,EAAAA,OAAa,GACzBA,EAAAA,EAAAA,GAAAA,GAQSA,EAAAA,EAAAA,OAAa,GACJA,EAAAA,EAAAA,OAAAA,oBAITC,EAAaF,EAAAA,EAAAA,MAAH,sGACJC,EAAAA,EAAAA,OAAa,GAErBA,EAAAA,EAAAA,OAAAA,cAIEE,EAAaH,EAAAA,EAAAA,MAAH,8RACJC,EAAAA,EAAAA,OAAa,GACnBA,EAAAA,EAAAA,OAAa,GAIRA,EAAAA,EAAAA,OAAa,GACdA,EAAAA,EAAAA,OAAa,GACVA,EAAAA,EAAAA,OAAa,GAGZA,EAAAA,EAAAA,OAAa,IAGrBG,EAAYJ,EAAAA,EAAAA,OAAH,sbAYWC,EAAAA,EAAAA,mBACzBA,EAAAA,EAAAA,yBACIA,EAAAA,EAAAA,mBACJA,EAAAA,EAAAA,yBAIgBA,EAAAA,EAAAA,OAAAA,U,6BC/CXI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAmB1B,OACE,UAACb,EAAD,CAAiBc,aAAa,MAAMC,SAnBjB,SAAAC,GACnBA,EAAEC,iBACF,MAA4BD,EAAEE,OAAOC,SAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACTC,EAAc,CAClBF,MAAOA,EAAMG,MACbF,SAAUA,EAASE,OAGrBhB,GAASiB,EAAAA,EAAAA,IAAMF,IACfG,QAAQC,IAAId,IAAUH,GAClBG,EACFe,EAAAA,GAAAA,MAAA,mGAIAX,EAAEE,OAAOU,OAEZ,EAEC,WACE,SAACzB,EAAD,CAAY0B,QAAQ,QAApB,SAA4B,WAC5B,SAACzB,EAAD,CAAY0B,KAAK,QAAQC,KAAK,QAAQC,GAAG,WACzC,SAAC7B,EAAD,CAAY0B,QAAQ,WAApB,SAA+B,cAC/B,SAACzB,EAAD,CAAY0B,KAAK,WAAWC,KAAK,WAAWC,GAAG,cAC/C,SAAC3B,EAAD,CAAWyB,KAAK,SAAhB,SAAyB,aAG9B,ECrCD,EAJkB,WACd,OAAO,SAACxB,EAAD,GACV,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","components/Pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\nexport const CustomLoginForm = styled.form`\n  max-width: 100%;\n  margin-top: ${theme.sizing(7)};\n  ${theme.mq[0]} {\n    width: 380px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  padding: ${theme.sizing(4)};\n  background-color: ${theme.colors.transparentWhiteBg};\n  backdrop-filter: blur(8px);\n`;\n\nexport const LoginLabel = styled.label`\n  margin-bottom: ${theme.sizing(2)};\n  font-weight: 500;\n  color: ${theme.colors.abmientWhite};\n  font-size: 18px;\n`;\n\nexport const LoginField = styled.input`\n  margin-bottom: ${theme.sizing(2)};\n  padding: ${theme.sizing(3)};\n  font-size: 18px;\n  background-color: hsla(193, 35%, 89%, 1);\n  border-radius: 4px;\n  padding-left: ${theme.sizing(2)};\n  padding-top: ${theme.sizing(1)};\n  padding-bottom: ${theme.sizing(1)};\n  border: none;\n  &: last-of-type {\n    margin-bottom: ${theme.sizing(4)};\n  }\n`;\nexport const LogintBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  width: 100%;\n  height: 36px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  background-color: hsla(111, 75%, 50%, 1);\n  color: white;\n  transition: background-color ${theme.transitionDuration}\n      ${theme.transitionTimingFunction},\n    color ${theme.transitionDuration}\n      ${theme.transitionTimingFunction};\n  &:hover,\n  &:focus {\n    color: hsla(193, 35%, 89%, 1);\n    background-color: ${theme.colors.darkBlue};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'features/auth/operations';\nimport {\n  CustomLoginForm,\n  LoginField,\n  LoginLabel,\n  LogintBtn,\n} from './LoginForm.styled';\nimport { toast } from 'react-toastify';\nimport { selectError, selectIsLoggedIn } from 'features/auth/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const error = useSelector(selectError);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { email, password } = e.target.elements;\n    const credentials = {\n      email: email.value,\n      password: password.value,\n    };\n\n    dispatch(logIn(credentials));\n    console.log(error && !isLoggedIn);\n    if (error) {\n      toast.error(\n        `The email and password You entered didn't match our records. Please, double check and try again`\n      );\n    } else {\n      e.target.reset();\n    }\n  };\n  return (\n    <CustomLoginForm autoComplete=\"off\" onSubmit={handleSubmit}>\n      <LoginLabel htmlFor=\"email\">Email</LoginLabel>\n      <LoginField type=\"email\" name=\"email\" id=\"email\" />\n      <LoginLabel htmlFor=\"password\">Password</LoginLabel>\n      <LoginField type=\"password\" name=\"password\" id=\"password\" />\n      <LogintBtn type=\"submit\">Log In</LogintBtn>\n    </CustomLoginForm>\n  );\n};\n","import { LoginForm } from \"components/LoginForm\";\n\nconst LoginPage = () => {\n    return <LoginForm/>\n}\n\nexport default LoginPage;"],"names":["CustomLoginForm","styled","theme","LoginLabel","LoginField","LogintBtn","LoginForm","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","error","selectError","autoComplete","onSubmit","e","preventDefault","target","elements","email","password","credentials","value","logIn","console","log","toast","reset","htmlFor","type","name","id"],"sourceRoot":""}